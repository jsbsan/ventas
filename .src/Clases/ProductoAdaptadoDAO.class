' Gambas class file

Inherits ProductoDAO

Public Sub Observar_Data(row As Integer, column As Integer)

  Dim f As New Font
  Dim datocontenido As Variant

  f.name = "Sans"
  f.size = Me.sizefont

  '-------------------------------------------
  'colores....filas impar / par ge regillas
  '-------------------------------------------
  If row Mod 2 = 0 Then
    Me.gridviewPropio.Data.Background = Me.ColorFilaImPar
  Else
    Me.gridviewPropio.Data.Background = Me.ColorFilaPar
  Endif

  Me.hresultadoNuevo.MoveTo(row)
  'comprobar si hay datos en TAG
  If IsNull(Me.gridviewPropio.tag) Then
    Try datocontenido = Me.hresultadoNuevo[Me.gridviewPropio.columns[column].text]
    If IsDate(Str$(datocontenido)) Then
      Me.gridviewPropio.Data.text = Format(Date(datocontenido), Me.formatofecha)
    Else
      If IsBoolean(Str$(datocontenido)) Then
        If datocontenido Then
          Me.gridviewPropio.data.picture = picture[Me.iconoTrue]
        Else
          Me.gridviewPropio.data.picture = picture[Me.iconoFalse]
        Endif
      Else
        Me.gridviewPropio.Data.text = datocontenido
      Endif
    Endif
    ''hay datos en  TAG
  Else
    Try datocontenido = Me.hresultadoNuevo[Me.GridViewPropio.tag[column]]
    If IsDate(Str$(datocontenido)) Then
      Me.gridviewPropio.Data.text = Format(Date(datocontenido), Me.formatofecha)
    Else
      If IsBoolean(Str$(datocontenido)) Then
        If datocontenido Then
          Me.gridviewPropio.data.picture = picture[Me.iconoTrue]
        Else
          Me.gridviewPropio.data.picture = picture[Me.iconoFalse]
        Endif
      Else

        If Me.GridViewPropio.tag[column] = "nombre" Then
          '  Print Me.gridviewPropio[row, 0].text '- > "id"
          ' formlistadoVentas.comprobarTablasEntradaRoboRoturaSalidaCREAR() 'para mostrar existencias

          Me.gridviewPropio.Data.text = datocontenido & " (Existencias:" & calculaexistencia(Me.gridviewPropio[row, 0].text) & ")"
          '  formlistadoVentas.comprobarTablasEntradaRoboRoturaSalidaBorrar()
        Else
          Me.gridviewPropio.Data.text = datocontenido
        Endif

      Endif
    Endif
  Endif

  '-----------------------------------------------
  ' columna con id, con ancho 0, para que no se vea
  '-----------------------------------------------
  If Upper$(Me.gridviewPropio.Columns[column].title) = Upper$("id") Then
    Me.arrayAnchoColumnas[column] = 0
    Return 'salgo de la funcion
  Endif
  '-----------------------------------------------
  'dibujo imagen en gridview
  '-----------------------------------------------

  If Upper$(Me.gridviewPropio.Columns[column].title) = Upper$("imagen") Then

    Me.gridviewPropio[row, column].Picture = Picture[comun.rutafichero(Me.gridviewPropio.Data.text)]
    Me.arrayAnchoColumnas[column] = 75
    Me.gridviewPropio.Rows.h = 70

    ' Me.gridviewPropio.Data.text = ""
    Return 'salgo de la funcion
  Endif

  'Compruebo ancho y amplio si es necesario.
  If Me.arrayAnchoColumnas[column] < F.textwidth(Me.gridviewPropio.Data.text) Then
    Me.arrayAnchoColumnas[column] = F.textwidth(Me.gridviewPropio.Data.text & "m")
  Endif

End

Private Function calculaexistencia(valorID As String) As String

  Dim conectar As New Conexion
  Dim SQLString As String
  Dim hresultExistencia As Result
  Dim numero As Integer

  conectar.Conexion()
  sqlstring = "Select EXISTENCIA_ALMACEN From inventario where idProducto = '" & valorid & "'"

  Try hresultExistencia = conectar.hconn.Exec(SQLString)
  If Error Then
    Message.Error(" Se ha producido un ERROR al intentar leer las existencias, " & "\nError: " & error.text)
    Return ""
  Else

    Try numero = Val(Replace$(hresultExistencia["EXISTENCIA_ALMACEN"], ".", ","))
    If Error Then
      numero = 0
    Endif
    Return numero
  Endif

End
