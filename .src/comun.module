' Gambas module file

Public RutaDdeTrabajo As String = user.home & "/Ventas/"

Public csv As Boolean ''true: abrira libreoofice, false: convierte en pdf

Public Function extraeColumnaArray(datos As Variant[], nombrecampo As String) As String

  Dim datotmp As Object
  Dim lista As New String[]

  For Each datotmp In datos
    lista.Add(Object.GetProperty(datotmp, nombrecampo))
  Next

  Return lista.Join(",")

End

'-------------------------------------------------------------------------------------------------
'funcion generica para extraer dos columnas (como colecciones, key="compuesto" y key="Id")
'y devuelve valores separados por coma
'-------------------------------------------------------------------------------------------------

Public Function ExtraerLista(nombreVista As String, nombreCampo As String, nombreId As String) As Collection

  Dim devolver As New Collection
  Dim hre As Result

  Dim manejadorTemporalDAO As Object
  Dim datostemporalVO As Object[]

  manejadorTemporalDAO = Object.New(nombreVista & "DAO")
  datostemporalVO = Object.New(nombreVista & "VO[]")

  hre = manejadorTemporalDAO.contenido() 'obtener todos los registros
  datostemporalVO = manejadorTemporalDAO.ConvertirResult(hre) 'convierto los resultados en un array de clases Vista objeto

  devolver.add(manejadorTemporalDAO.extraeColumnaArray(datostemporalVO, nombreCampo), "Compuesto")
  devolver.add(manejadorTemporalDAO.extraeColumnaArray(datostemporalVO, nombreId), "Id")

  Return devolver

End

'----------------------------------------------
Public Sub cambiarFecha(f As String) As String

  Dim anno As String
  Dim dia As String
  Dim mes As String

  ''NOTE: Cuidado con el formato de datos que tiene segun el pais
  mes = Mid$(f, 1, 2)
  dia = Mid$(f, 4, 2)
  anno = Mid$(f, 7, 4)

  Return anno & "-" & mes & "-" & dia

End

Public Sub MensajeError()

  Message.error(Error.Where & "\n" & error.Text & "\n" & ("Trazada:") & "\n" & Error.Backtrace.Join("\n"))

End

Public Function camel(texto As String) As String

  Dim t As String[]

  Dim a As Integer

  t = Split(texto, " ")

  For a = 0 To t.max

    t[a] = Upper$(Mid$(t[a], 1, 1)) & Lower$(Mid$(t[a], 2, Len(t[a])))

  Next

  Return t.Join("")

End

Public Sub rutafichero(codigo As String) As String

  Dim manejadorimagen As New ImagenesDAO
  Dim datostmp As New ImagenesVO

  Try datostmp = manejadorimagen.ConvertirResult(manejadorimagen.BuscarIgualImagen(codigo))[0]

  If Error Then Return "SinImagen.jpg"

  Return comun.RutaDdeTrabajo & "/mini_" & datostmp.rutaimagen

End

'' antiguo modulo comun

Private hconn As Connection

Private ruta As String = User.home &/ "Ventas/"
Private nombreBD As String = "Ventas"

Public Function ConectarBase() As Connection

  hconn = New Connection
  hconn.host = ruta
  hconn.name = nombreBD
  hconn.type = "sqlite3"

  Try hconn.Open()

  If Error Then
    Message.Info(("Error al conectarse a la base de datos"))
    Print Error.Text
    Print Error.Where
    Print Error.Code
  Else
    Return hconn
  Endif

  Return Null

End

Public Function copiarBase()

  If Exist(ruta & "/" & nombreBD) Then
    'existe el archivo, no hago nada.
  Else
    Try Mkdir ruta
    Try Copy nombreBD To ruta & "/" & nombreBD
  Endif

End
