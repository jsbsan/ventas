' Gambas class file

Private hconn As Conexion
Private hresult As Result
Private manejarRecibos As New ReciboAdaptadoDAO 'para presentar el nombre de los clientes y empleados
Private sumatotal As Float

Public Sub ButtonSalir_Click()
  
  Me.close
  
End

Public Sub Form_Open()
  
  DateBoxFecha.value = Now
  ' manejarRecibos.gridFormatearColumnas(GridView1)
  ' MostrarTodosLosRegistros()
  ModuleVarios.cargaEmpleadoCombobox(ComboBoxEmpleado)
  'cargaEmpleadoCombobox()
  manejarRecibos.ColorFilaPar = Settings["ColorRegillaPar", Color.orange]
  manejarRecibos.ColorFilaImPar = Settings["ColorRegillaImPar", color.white]
  
  manejarRecibos.MostrarGridView(GridView1)
  quitarFiltros_Click()

End

Public Sub escribeDatos()
  'escribo todo los datos...
  
  ' manejarRecibos.GridResultanteSQL(hresult, GridView1)
  ' GridView1.Rows.count = 0
  ' GridView1.Rows.Count = hresult.Count
  
  manejarRecibos.MostrarGridView(GridView1)
  calculoImporte(hresult)
  
End

Public Sub calculoImporte(h As Result)
  
  h.MoveFirst
  sumatotal = 0
  While h.Available
    If IsNull(h["importe"]) Then
    Else
      sumatotal += h["importe"]
    Endif
    LabelSumaTotal.text = Format$(sumatotal, ",#.#0")
    h.MoveNext
  Wend
  LabelSumaTotal.text = Format$(sumatotal, ",#.#0")
  
End

' Public Sub GridView1_Data(row As Integer, column As Integer)
'
'   Dim hresultado2 As Result 'para obtener cliente
'   Dim hresultado3 As Result 'para obtener empleado
'   Dim fecha As Date
'   Dim manejadorClienteDatos As ClienteDAO
'   Dim manejadorEmpleado As EmpleadoDAO
'
'   hresult.MoveTo(row)
'
'   If GridView1.Columns[column].text = "idcliente" Then
'     manejadorClienteDatos = New ClienteDAO
'     hresultado2 = manejadorClienteDatos.BuscarIgualId(hresult["idcliente"])
'     Try GridView1.Data.text = hresultado2["nombre"]
'     If Error Then
'       Print Error
'       'Message.error("Fallo de integridad de la base de datos Error: posiblemente se ha borrado un cliente ")
'       TextLabelError.text = ("IMPORTENTE: SE HAN PRODUCIDO ERRORES DE INTEGRIDAD EN LA BASE DE DATOS (CLIENTES O EMPLEADOS HAN SIDO BORRADO)")
'       Return
'     Endif
'     Return
'   Endif
'
'   If GridView1.Columns[column].text = "idempleado" Then
'     manejadorEmpleado = New EmpleadoDAO
'     hresultado3 = manejadorEmpleado.BuscarIgualId(hresult["idempleado"])
'     Try GridView1.Data.text = hresultado3["nombre"]
'     If Error Then
'       Print Error
'
'       TextLabelError.text = "IMPORTENTE: SE HAN PRODUCIDO ERRORES DE INTEGRIDAD EN LA BASE DE DATOS (CLIENTES O EMPLEADOS HAN SIDO BORRADO)"
'       Return
'     Endif
'     Return
'   Endif
'
'   If GridView1.Columns[column].text = "fecha" Then
'
'     '   Print GridView1.Columns[column].text
'     '    Print hresult[GridView1.Columns[column].text]
'     Try fecha = hresult[GridView1.Columns[column].text]
'     Try GridView1.Data.text = Format(hresult["fecha"], "dd/mm/yyyy")
'     If Error Then
'       Print Error
'
'       TextLabelError.text = "IMPORTENTE: SE HAN PRODUCIDO ERRORES DE INTEGRIDAD EN LA BASE DE DATOS (CLIENTES O EMPLEADOS HAN SIDO BORRADO)"
'       Return
'     Endif
'     Return
'   Endif
'
'   If GridView1.Columns[column].text = "importe" Then
'
'     GridView1.Data.Alignment = Align.Right
'
'     If IsNull(hresult[GridView1.Columns[column].text]) Then
'     Else
'       Try GridView1.Data.text = Format$(hresult[GridView1.Columns[column].text], ",#.#0")
'     Endif
'
'   Endif
'
'   Try GridView1.Data.text = hresult[GridView1.Columns[column].text]
'
' End

Public Sub ButtonFiltroFecha_Click()
  
  sumatotal = 0
  LabelSumaTotal.text = ""
  manejarRecibos.MostrarGridView(GridView1, Subst$("Select * From recibo WHERE fecha Like '%&1%' ", cambiarFecha(Mid(Str$(DateBoxFecha.value), 1, 10))))
  
  hresult = manejarRecibos.sql(Subst$("Select * From recibo WHERE fecha Like '%&1%' ", cambiarFecha(Mid(Str$(DateBoxFecha.value), 1, 10))))
  calculoImporte(hresult)
  '  manejarRecibos.GridResultanteSQL(hresult, GridView1)
  ' escribeDatos()
  
End

Public Sub ButtonFiltroEmpleado_Click()
  
  sumatotal = 0
  LabelSumaTotal.text = ""
  Try manejarRecibos.MostrarGridView(GridView1, Subst$("Select * From recibo WHERE idempleado Like '%&1%' ", ComboBoxEmpleado.Tag[ComboBoxEmpleado.index]))
  If Error Then Return 'no hay valores que mostrar
  hresult = manejarRecibos.sql(Subst$("Select * From recibo WHERE idempleado Like '%&1%' ", ComboBoxEmpleado.Tag[ComboBoxEmpleado.index]))
  calculoImporte(hresult)
  ' manejarRecibos.GridResultanteSQL(hresult, GridView1)
  ' escribeDatos()
  
End

'--------------
Public Sub cambiarFecha(f As String) As String
  
  Dim anno As String
  Dim dia As String
  Dim mes As String
  
  dia = Mid$(f, 1, 2)
  mes = Mid$(f, 4, 2)
  anno = Mid$(f, 7, 4)
  
  Return anno & "-" & mes & "-" & dia
  
End

Public Sub cargaEmpleadoCombobox(c As ComboBox)
  
  Dim empleado As String
  Dim h As Result
  Dim m As New EmpleadoDAO
  Dim ids As New Variant[]
  'lee datos del tabla de empledo...
  h = m.contenido()
  'los cargas al cambobox
  
  While h.Available
    empleado = h["nombre"]
    ids.Add(h["id"])
    c.Add(empleado)
    
    h.MoveNext
  Wend
  C.tag = ids
  
End

Public Sub MostrarTodosLosRegistros()
  
  hresult = manejarRecibos.contenido()
  calculoImporte(hresult)
  manejarRecibos.GridResultanteSQL(hresult, GridView1)
  escribeDatos()
  
End

'---------------------------------------
' Menu Recibos
'---------------------------------------

Public Sub ReciboImprimir_Click()
  
  'mostrar el informe del registro elegido....
  If GridView1.Row = -1 Then
    Message.Info(("Error: Seleccione un  recibo"))
    Return
  Endif
  ModuleVarios.imprimirRecibo(GridView1[GridView1.row, 4].text)
  
End

Public Sub BorrarRecibo_Click()
  
  Dim respuesta As Integer
  Dim manejadoLineaReciboDatos As LineaReciboAdaptadaDAO
  
  If GridView1.Row = -1 Then
    Message.Info(("Error: Seleccione un  recibo"))
    Return
  Endif
  
  If Settings["BorradoRecibo", "No"] = "No" Then
    Message.Info(("No se pueden borrar los recibos<br>Actualice la Configuraci√≥n "))
  Else
    respuesta = Message.Warning(("El borrado de Registros es DEFINITIVO"), ("Borrar"), ("Cancelar"))
    If respuesta = 1 Then
      
      ' Print "borrado de idrecibo:", GridView1[GridView1.row, 0].text
      ' Print "borrado de lineas descompuesto:", GridView1[GridView1.row, 4].text
      manejadoLineaReciboDatos = New LineaReciboAdaptadaDAO
      manejarRecibos.BorrarId(GridView1[GridView1.row, 0].text)
      manejadoLineaReciboDatos.BorrarIdlinearecibo(GridView1[GridView1.row, 4].text)
      MostrarTodosLosRegistros()
    Endif
  Endif
  
End

Public Sub quitarFiltros_Click()
  
  MostrarTodosLosRegistros()
  ModuleVarios.cargaEmpleadoCombobox(ComboBoxEmpleado)
  
End

Public Sub ButtonQuitarFiltro_Click()
  
  quitarFiltros_Click()
  
End

Public Sub ButtonImprimir_Click()
  
  ReciboImprimir_Click()
  
End

Public Sub ButtonBorrarRecibo_Click()
  
  BorrarRecibo_Click()
  
End
